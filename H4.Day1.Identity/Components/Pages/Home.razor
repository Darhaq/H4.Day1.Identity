@page "/"
@inject AuthenticationStateProvider _authenticationStateProvider
@inject NavigationManager _navigationManager
@inject Codes.SymmetricEncryption _SymmetricEncryption
@inject Codes.AsymmetricEncryption _asymmetricEncryption
@inject ILogger<Home> Logger

@attribute [Microsoft.AspNetCore.Authorization.Authorize(Policy = "AuthenticatedUser")]

<PageTitle>Home</PageTitle>

@if (_isAdmin)
{
    <div style="color: green; font-weight: bold; margin: 20px;">
        You are admin!
    </div>
}
@if (_isAuthenticated)
{
    <div>Velkommen, du er nu logget ind.</div>
    <button class="btn btn-primary" @onclick="NavigateToCpr">Fortsæt til CPR</button>
}

@code {
    private bool _isAuthenticated;
    private bool _isAdmin;

    protected override async Task OnInitializedAsync()
    {
        // Existing hashing and encryption code
        Codes.HashingHandler hashingHandler = new();
        string valueToHash1 = "33333333";
        string hashedValue = hashingHandler.BCryptHashing1(valueToHash1);

        string valueToHash2 = "33333333";
        bool matched = hashingHandler.BCryptVerifyHashing1(valueToHash2, hashedValue);

        //bool isMatched = hashedValue == hashedValue2;


        string textToEncrypt = "Køb mælk";
        // var encryptedText = _SymetricEncryption.Encrypt(textToEncrypt);
        // var decryptedText = _SymetricEncryption.Decrypt(encryptedText);
        string encryptedText = await _asymmetricEncryption.EncryptAsymmetric_webApi(textToEncrypt);
        var decryptedText = _asymmetricEncryption.DecryptAsymmetric(encryptedText);

        // Authentication and role check
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        _isAuthenticated = user.Identity.IsAuthenticated;
        if (_isAuthenticated)
        {
            _isAdmin = user.IsInRole("Admin");
            Logger.LogInformation("User: {UserName}, IsAdmin: {IsAdmin}", user.Identity.Name, _isAdmin);
            StateHasChanged();
        }
        else
        {
            Logger.LogWarning("User is not authenticated on Home page.");
        }
    }

    private void NavigateToCpr()
    {
        _navigationManager.NavigateTo("/CprNr", forceLoad: false);
    }
}
